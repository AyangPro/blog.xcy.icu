import{_ as n,W as s,X as a,a0 as t}from"./framework-91490e6a.js";const p={},o=t(`<h1 id="java-反射" tabindex="-1"><a class="header-anchor" href="#java-反射" aria-hidden="true">#</a> Java 反射</h1><p>每个类都有一个Class对象，包含了与类有关的信息，当编译一个新类时，会产生一个同名的.class文件，这个文件保存着Class对象。</p><p>类加载就是Class对象的加载，类在第一次使用时才动态加载到JVM中，我们可以使用Class.forName()的方式来动态控制类的加载，这个方法会返回一个Class对象。</p><p>反射可以提供运行时的类的信息，同时这个类也可以在运行时载入，甚至在编译期该类的.class文件不存在也可以加载进来。</p><p>Class和java.lang.reflect一起对反射提供了支持，java.lang.reflect类库主要包含了以下三个类：</p><ul><li>Field：可以使用get()和set()方法读取和修改Field对象关联的字段</li><li>Method：可以用invoke()方法调用与Method对象关联的方法</li><li>Constructor：可以用Constructor创建新对象</li></ul><h2 id="一、反射基础" tabindex="-1"><a class="header-anchor" href="#一、反射基础" aria-hidden="true">#</a> 一、反射基础</h2><p>反射的作用是在运行时识别一个对象的类型和信息</p><h3 id="_1、class类" tabindex="-1"><a class="header-anchor" href="#_1、class类" aria-hidden="true">#</a> 1、Class类</h3><p>Class类存在于java.lang包下，Class类的实例用来表示java运行时的类或者接口。</p><ul><li>Class类也是类的一种，与class关键字不同</li><li>手动编写的类在编译后会产生一个Class类对象，它表示的是创建类的类型信息，而这个Class对象保存在同名.class的字节码文件中</li><li>每个通过关键字class标识的类，在内存中有且只有一个与之对象的Class对象来描述其类型信息，无论创建多少个实例对象，其依据都是用一个Class对象</li><li>Class类只存在私有的构造方法，因此对应Class对象只能又要JVM创建和加载</li><li>Class类的对象作用是运行时提供或获得某个对象的类型信息，这点对于反射技术很重要</li></ul><blockquote><p>注意：每个java类在运行时都在jvm中表现为一个class对象，可以通过类名.class，类型.getClass()，Class.forName()等方法获取该类的class对象，包括数组和基本类型，都表现为class对象。</p></blockquote><h3 id="_2、类加载" tabindex="-1"><a class="header-anchor" href="#_2、类加载" aria-hidden="true">#</a> 2、类加载</h3><h2 id="二、反射的使用" tabindex="-1"><a class="header-anchor" href="#二、反射的使用" aria-hidden="true">#</a> 二、反射的使用</h2><p>在Java中，Class类与java.lang.reflect类库一起对反射提供了支持，在反射包中，常用的类主要有Constructor类、Field类、Method类。</p><ul><li>Constructor类表示的是Class对象对应类的构造方法，我们可以通过它来在运行时动态创建对象</li><li>Field类表示的是Class对象对应类的成员变量，我们可以通过它来在运行时动态修改成员变量的值</li><li>Method类表示的是Class对象对应类的成员方法，我们可以通过它来在运行时动态调用方法</li></ul><p>在类加载时，jvm会创建一个class对象，反射获取class对象的方式主要有三种：</p><ul><li>类名：类名.class</li><li>对象：对象.getClass()</li><li>全限定类名：Class.forName(全限定类名)</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JavaBasicsLan</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">//获取class对象的三种方式</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;类名：&quot;</span> <span class="token operator">+</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;对象：&quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;全限定类名：&quot;</span> <span class="token operator">+</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;icu.xcy.fcblog.Person&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//常用的方法</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;获取全限定类名:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;获取类名:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;实例化:&quot;</span> <span class="token operator">+</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">22</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">01.637</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>JavaBasicsLan</span> <span class="token operator">-</span> 类名：<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>Person</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">01.642</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>JavaBasicsLan</span> <span class="token operator">-</span> 对象：<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>Person</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">01.642</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>JavaBasicsLan</span> <span class="token operator">-</span> 全限定类名：<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>Person</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">01.642</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>JavaBasicsLan</span> <span class="token operator">-</span> 获取全限定类名<span class="token operator">:</span><span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>Person</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">01.643</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>JavaBasicsLan</span> <span class="token operator">-</span> 获取类名<span class="token operator">:</span><span class="token class-name">Person</span>
<span class="token number">22</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">01.643</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>JavaBasicsLan</span> <span class="token operator">-</span> 实例化<span class="token operator">:</span><span class="token class-name">Person</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1、class类中的方法" tabindex="-1"><a class="header-anchor" href="#_1、class类中的方法" aria-hidden="true">#</a> 1、Class类中的方法</h3><table><thead><tr><th style="text-align:left;">方法名</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:left;">forName()</td><td>获取Class对象的引用，但引用的类还没有加载就加载了这个类，为了产生Class引用，forName()立即就进行了初始化</td></tr><tr><td style="text-align:left;">getClass()</td><td>获取Class对象的一个引用，返回表示该对象的实际类型的Class引用</td></tr><tr><td style="text-align:left;">getName()</td><td>获取类的完整名字</td></tr><tr><td style="text-align:left;">getSimpleName()</td><td>获取类名</td></tr><tr><td style="text-align:left;">getCanonicalName()</td><td>获取全限定类型</td></tr><tr><td style="text-align:left;">isInterface()</td><td>判断Class对象是否是表示一个接口</td></tr><tr><td style="text-align:left;">getIntegerfaces()</td><td>返回Class对象数组，表示Class对象所引用的类实现的所有接口</td></tr><tr><td style="text-align:left;">getSupercalss()</td><td>返回Class对象，表示Class对象所引用的类所继承的直接父类。该方法可在运行时发现一个对象完整的继承结构。</td></tr><tr><td style="text-align:left;">newInstance()</td><td>返回一个Object对象，是实现“虚拟构造器”的一种途径。使用该方法创建的类，必须带有无参的构造器。</td></tr><tr><td style="text-align:left;">getFields()</td><td>获得某个类的所有的公共（public）的字段，包括继承自父类的所有公共字段。</td></tr><tr><td style="text-align:left;">getDeclaredFields()</td><td>获得某个类的自己声明的字段，即包括public、private和proteced，默认但是不包括父类声明的任何字段。</td></tr></tbody></table><h3 id="_2、constructor类及其使用" tabindex="-1"><a class="header-anchor" href="#_2、constructor类及其使用" aria-hidden="true">#</a> 2、Constructor类及其使用</h3><p>Constructor类在java.lang.reflect包中，反映的是Class对象所表示的类的构造方法。</p><p>Constructor对象是通过Class类中方法获取的，Class类与Constructor相关的主要方法如下：</p><table><thead><tr><th>方法名</th><th>返回值</th><th>说明</th></tr></thead><tbody><tr><td>forName(String className)</td><td>static Class&lt;?&gt;</td><td>返回带有指定字符串的类或者接口相关联的Class对象</td></tr><tr><td>getConstructor(Class&lt;?&gt; parameterTypes)</td><td>Constructor</td><td>返回指定参数类型，具有public访问权限的构造方法对象</td></tr><tr><td>getConstructor()</td><td>Constructor</td><td>返回指定参数类型，所有具有public访问权限的构造方法的Constructor对象数组</td></tr><tr><td>getDeclaredConstructor(Class&lt;?&gt; parameterTypes)</td><td>Constructor</td><td>返回指定参数类型、所有声明的构造方法对象</td></tr><tr><td>getDeclaredConstructor()</td><td>Constructor&lt;?&gt;[]</td><td>返回所有声明的构造方法对象</td></tr><tr><td>newInstance()</td><td>T</td><td>调用无参构造器创建此 Class 对象所表示的类的一个新实例</td></tr></tbody></table><p>举例说明：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JavaBasicsLan</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token comment">//获取Class对象的引用</span>
        clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;icu.xcy.fcblog.Person&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//第一种方法，实例化默认构造方法，Person必须无参构造函数,否则将抛异常</span>
        <span class="token class-name">Person</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">)</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;**************************************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//获取带String参数的public构造函数</span>
        <span class="token class-name">Constructor</span> cs1 <span class="token operator">=</span>clazz<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//创建Person</span>
        <span class="token class-name">Person</span> <span class="token class-name">Person1</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">)</span> cs1<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token string">&quot;hiway&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Person1</span><span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Person1:&quot;</span><span class="token operator">+</span><span class="token class-name">Person1</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;**************************************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//取得指定带int和String参数构造函数,该方法是私有构造private</span>
        <span class="token class-name">Constructor</span> cs2<span class="token operator">=</span>clazz<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//由于是private必须设置可访问</span>
        cs2<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//创建Person对象</span>
        <span class="token class-name">Person</span> <span class="token class-name">Person2</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">)</span> cs2<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token string">&quot;hiway2&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Person2:&quot;</span><span class="token operator">+</span><span class="token class-name">Person2</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;**************************************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//获取所有构造包含private</span>
        <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> cons<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredConstructors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 查看每个构造方法需要的参数</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cons<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//获取构造函数参数类型</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazzs<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> cons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;构造函数[&quot;</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">&quot;]:&quot;</span><span class="token operator">+</span>cons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;参数类型[&quot;</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">&quot;]:(&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> clazzs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> clazzs<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>clazzs<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>clazzs<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
	<span class="token doc-comment comment">/**
     * 私有构造方法
     * <span class="token keyword">@param</span> <span class="token parameter">name</span>
     * <span class="token keyword">@param</span> <span class="token parameter">age</span>
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Person</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token class-name">Jack</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>
<span class="token class-name">Person1</span><span class="token operator">:</span><span class="token class-name">Person</span><span class="token punctuation">(</span>name<span class="token operator">=</span>hiway<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">)</span>
<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>
<span class="token class-name">Person2</span><span class="token operator">:</span><span class="token class-name">Person</span><span class="token punctuation">(</span>name<span class="token operator">=</span>hiway2<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">)</span>
<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>
构造函数<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
参数类型<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
构造函数<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>Person</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Integer</span><span class="token punctuation">)</span>
参数类型<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Integer</span><span class="token punctuation">)</span>
构造函数<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token keyword">private</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>Person</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">)</span>
参数类型<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">)</span>
构造函数<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>Person</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span>
参数类型<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、constructor类本身的常用方法" tabindex="-1"><a class="header-anchor" href="#_3、constructor类本身的常用方法" aria-hidden="true">#</a> 3、Constructor类本身的常用方法：</h3><table><thead><tr><th>方法名称</th><th>方法返回值</th><th>说明</th></tr></thead><tbody><tr><td>getDeclaringClass()</td><td>Class</td><td>返回 Class 对象，该对象表示声明由此 Constructor 对象表示的构造方法的类,其实就是返回真实类型（不包含参数）</td></tr><tr><td>getGenericParameterTypes()</td><td>Type[]</td><td>按照声明顺序返回一组 Type 对象，返回的就是 Constructor对象构造函数的形参类型。</td></tr><tr><td>getName()</td><td>String</td><td>以字符串形式返回此构造方法的名称。</td></tr><tr><td>getParameterTypes()</td><td>Class&lt;?&gt;[]</td><td>按照声明顺序返回一组 Class 对象，即返回Constructor 对象所表示构造方法的形参类型</td></tr><tr><td>newInstance(Object... initargs)</td><td>T</td><td>使用此 Constructor对象表示的构造函数来创建新实例</td></tr><tr><td>toGenericString()</td><td>String</td><td>返回描述此 Constructor 的字符串，其中包括类型参数。</td></tr></tbody></table><p>举例说明：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Constructor</span> cs3 <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----getDeclaringClass-----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class</span> uclazz <span class="token operator">=</span> cs3<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//Constructor对象表示的构造方法的类</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;构造方法的类:&quot;</span> <span class="token operator">+</span> uclazz<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----getGenericParameterTypes-----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//对象表示此 Constructor 对象所表示的方法的形参类型</span>
        <span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tps <span class="token operator">=</span> cs3<span class="token punctuation">.</span><span class="token function">getGenericParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Type</span> tp <span class="token operator">:</span> tps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;参数名称tp:&quot;</span> <span class="token operator">+</span> tp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----getParameterTypes-----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取构造函数参数类型</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazzs<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> cs3<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span> claz <span class="token operator">:</span> clazzs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;参数名称:&quot;</span> <span class="token operator">+</span> claz<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----getName-----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//以字符串形式返回此构造方法的名称</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getName:&quot;</span> <span class="token operator">+</span> cs3<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----getoGenericString-----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//返回描述此 Constructor 的字符串，其中包括类型参数。</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getoGenericString():&quot;</span> <span class="token operator">+</span> cs3<span class="token punctuation">.</span><span class="token function">toGenericString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>getDeclaringClass<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>
        构造方法的类<span class="token operator">:</span><span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>Person</span>
        <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>getGenericParameterTypes<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>
        参数名称tp<span class="token operator">:</span><span class="token keyword">int</span>
        参数名称tp<span class="token operator">:</span><span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span>
        <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>getParameterTypes<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>
        参数名称<span class="token operator">:</span><span class="token keyword">int</span>
        参数名称<span class="token operator">:</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span>
        <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>getName<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>
        getName<span class="token operator">:</span><span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>Person</span>
        <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>getoGenericString<span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>
        <span class="token function">getoGenericString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">private</span> <span class="token class-name"><span class="token namespace">icu<span class="token punctuation">.</span>xcy<span class="token punctuation">.</span>fcblog<span class="token punctuation">.</span></span>Person</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span>
        <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、field类及其用法" tabindex="-1"><a class="header-anchor" href="#_4、field类及其用法" aria-hidden="true">#</a> 4、Field类及其用法</h3><p>Field提供有关类或者接口的单个字段信息，以及对它的动态访问权限，放射的字段可能是一个类字段或者实例字段。</p><h2 id="三、反射机制" tabindex="-1"><a class="header-anchor" href="#三、反射机制" aria-hidden="true">#</a> 三、反射机制</h2>`,40),e=[o];function c(l,u){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","java-reflect.html.vue"]]);export{r as default};
